// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FieldRow component Renders initial component 1`] = `
<TestFieldComponent
  error={false}
  hasError={false}
  input={
    Object {
      "checked": false,
      "disabled": false,
      "onChange": [Function],
    }
  }
  inputProps={
    Object {
      "id": undefined,
      "placeholder": undefined,
      "title": undefined,
    }
  }
  meta={
    Object {
      "active": false,
      "error": false,
      "pristine": false,
      "touched": false,
    }
  }
  passthroughProps={
    Object {
      "intl": Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": Object {
          "button.add": "Add",
          "button.back": "Back",
          "button.cancel": "Cancel",
          "button.confirm": "Confirm",
          "button.dismiss": "Dismiss",
          "button.next": "Next",
          "button.ok": "Okay",
          "button.remove": "Remove",
          "home": "Home",
          "input.resetText": "Cancel",
          "label.description": "Description",
          "label.email": "Email address",
          "label.name": "Name",
          "label.optional": "Optional",
          "label.password": "Password",
          "placeholder.email": "handle@domain.com",
          "placeholder.password": "Password",
          "role.admin": "Admin",
          "role.disabled": "Disabled",
          "role.member": "Member",
          "role.owner": "Owner",
        },
        "now": [Function],
        "textComponent": "span",
      },
      "name": "test",
    }
  }
  utils={
    Object {
      "reset": [Function],
    }
  }
/>
`;
