.main {
  display: flex;
  flex-direction: column;
  margin-top: 10px;
}

.transactionSpeedContainer {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px 0;
}

.transactionFeeContainer {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 10px 0 0;
}

.transactionFeeMenu {
  display: flex;
  align-items: center;
}

.transactionSpeedMenuButtonContainer {
  align-self: flex-start;
}

.transactionSpeedMenuButton {
  composes: button from '~styles/reset.css';

  & svg {
    transition-duration: 0.25s;
    transition-property: transform;
    fill: var(--text);
    stroke: var(--text);
  }
}

.transactionFeeActions {
  display: flex;
  align-items: center;
}

.transactionFeeInfo {
  margin-left: 20px;
}

.transactionSpeedLabel,
.transactionFeeLabel {
  color: var(--grey-dark);
  letter-spacing: 0.25px;
}

.transactionDuration {
  font-size: var(--size-small);
}

.transactionFeeAmount {
  margin-right: 20px;
  text-align: right;
  letter-spacing: 0.1px;
}

.transactionFeeConfirm {
  text-align: right;
  justify-self: flex-end;
  letter-spacing: 0.25px;
}

/* State */

.transactionSpeedContainerToggleable {
  overflow-y: hidden;
  transition: max-height 0.25s ease-in-out;

  &[aria-hidden="true"] {
    max-height: 0;
  }

  &[aria-hidden="false"] {
    /*
     * @NOTE: This is slightly hacky. Using a max height that's greater than the
     * actual height of the content to ensure it expands all the way, since
     * css transitions don't work with `height: auto`
     */
    max-height: 53px;
  }
}

.stateIsSpeedMenuOpen {
  & .transactionSpeedMenuButton {
    & svg {
      transform: rotate(180deg);
    }
  }
}

.stateIsSpeedMenuOpen .transactionSpeedMenuButton,
.transactionSpeedMenuButton[disabled="false"]:hover {
  border-radius: var(--radius-small);
  background-color: var(--grey-blue-1);

  & svg {
    fill: var(--colony-blue);
    stroke: var(--colony-blue);
  }
}

.transactionSpeedMenuButton[disabled] {
  cursor: not-allowed;
}
