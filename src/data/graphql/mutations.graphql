#import './fragments.graphql'

# Users

mutation SetLoggedInUser($input: LoggedInUserInput!) {
  setLoggedInUser(input: $input) @client {
    id
  }
}

mutation ClearLoggedInUser {
  clearLoggedInUser @client {
    id
  }
}

mutation CreateUser(
  $createUserInput: CreateUserInput!
  $loggedInUserInput: LoggedInUserInput!
) {
  # Create user on the server
  createUser(input: $createUserInput) {
    id
  }
  # Set the current user data to the given data
  setLoggedInUser(input: $loggedInUserInput) @client {
    id
  }
}

mutation EditUser($input: EditUserInput!) {
  editUser(input: $input) {
    id
    profile {
      avatarHash
      bio
      displayName
      location
      website
    }
  }
}

mutation SetUserTokens($input: SetUserTokensInput!) {
  setUserTokens(input: $input) {
    id
    tokenAddresses
  }
}

mutation MarkNotificationAsRead($input: MarkNotificationAsReadInput!) {
  markNotificationAsRead(input: $input)
}

mutation MarkAllNotificationsAsRead {
  markAllNotificationsAsRead
}

mutation SubscribeToColony($input: SubscribeToColonyInput!) {
  subscribeToColony(input: $input) {
    id
    colonyAddresses
  }
}

mutation UnsubscribeFromColony($input: UnsubscribeFromColonyInput!) {
  unsubscribeFromColony(input: $input) {
    id
    colonyAddresses
  }
}

mutation SendTransactionMessage($input: SendTransactionMessageInput!) {
  sendTransactionMessage(input: $input)
}

# Network Contracts

mutation UpdateNetworkContracts {
  updateNetworkContracts @client {
    version
    feeInverse
  }
}

mutation DeleteTransactionMessage($input: DeleteTransactionMessageInput!) {
  deleteTransactionMessage(input: $input)
}

mutation BanUserTransactionMessages($input: BanTransactionMessagesInput!) {
  banUserTransactionMessages(input: $input)
}

mutation UnBanUserTransactionMessages($input: UnBanTransactionMessagesInput!) {
  unbanUserTransactionMessages(input: $input)
}
