version: 2

jobs:
  build-with-lockfile:
    docker:
      - image: circleci/node:10.12
    working_directory: ~/colonyDapp
    steps:
      - checkout
      - restore_cache:
          keys:
          - node-modules-{{ checksum "package.json" }}
          - node-modules-
      - run:
          name: "Set up global packages"
          command: |
            yarn global add greenkeeper-lockfile@1
            yarn global add lerna
      - run:
          name: "Installing modules"
          command: |
            yarn install
            yarn provision --skip-colony-network-build
      - save_cache:
          paths:
            - node_modules
          key: node-modules-{{ checksum "package.json" }}
      - run:
          name: "Updating lockfile"
          command: $HOME/.config/yarn/global/node_modules/.bin/greenkeeper-lockfile-update
      - run:
          name: "Checking correct types"
          command: |
            mkdir -p reports/flow
            yarn flow:ci
      - run:
          name: "Linting Javascript"
          command: yarn lint:ci
      - run:
          name: "Linting Style sheets"
          command: |
            mkdir -p reports/stylelint
            yarn stylelint:ci
      - run:
          name: "Running unit tests"
          command: yarn test:ci
          environment:
            JEST_JUNIT_OUTPUT: "reports/jest/jest-results.xml"
      - store_test_results:
          path: reports
      - store_artifacts:
          path: reports
      - run:
          name: "Building library"
          command: yarn webpack:build
      - run:
          name: "Uploading updated lockfile"
          command: $HOME/.config/yarn/global/node_modules/.bin/greenkeeper-lockfile-upload
  nightly-build:
    docker:
      - image: circleci/node:10.12
    working_directory: ~/colonyDapp
    steps:
      - checkout
      - restore_cache:
          keys:
          - node-modules-{{ checksum "package.json" }}
          - node-modules-
      - run:
          name: "Installing modules"
          command: |
            yarn install
            yarn provision --skip-colony-network-build
      - save_cache:
          paths:
            - node_modules
          key: node-modules-{{ checksum "package.json" }}
      - run:
          name: "Checking correct types"
          command: |
            mkdir -p reports/flow
            yarn flow:ci
      - run:
          name: "Linting Javascript"
          command: yarn lint:ci
      - run:
          name: "Linting Style sheets"
          command: |
            mkdir -p reports/stylelint
            yarn stylelint:ci
      - run:
          name: "Running unit tests"
          command: yarn test:ci
          environment:
            JEST_JUNIT_OUTPUT: "reports/jest/jest-results.xml"
      - store_test_results:
          path: reports
      - store_artifacts:
          path: reports
      - run:
          name: "Building library"
          command: yarn webpack:build
  integration-testing:
    docker:
      - image: circleci/node:10.12
    working_directory: ~/colonyDapp
    steps:
      - checkout
      - restore_cache:
          keys:
          - node-modules-{{ checksum "package.json" }}
          - node-modules-
      - run:
          name: "Installing modules"
          command: |
            yarn install
            yarn provision --skip-colony-network-build
      - save_cache:
          paths:
            - node_modules
          key: node-modules-{{ checksum "package.json" }}
      - run:
          name: "Linting Javascript"
          command: yarn lint:ci
      - run:
          name: "Running Integration Tests"
          command: |
            mkdir -p reports/ava
            yarn test:integration:ci
      - store_test_results:
          path: reports
      - store_artifacts:
          path: reports
  e2e-testing:
    docker:
      - image: joincolony/circleci-cypress
    parallelism: 2
    environment:
      LOADER: trufflepig
      NETWORK: local
      TERM: xterm
      CYPRESS_VIEWPORT_WIDTH: 1920
      CYPRESS_VIEWPORT_HEIGHT: 1080
    working_directory: ~/colonyDapp
    steps:
      - checkout
      - restore_cache:
          keys:
            - cache-{{ checksum "package.json" }}
      - run:
          name: "Installing modules"
          command: yarn install
      - setup_remote_docker
      - run:
          name: "Pull solc docker image"
          command: docker pull ethereum/solc:0.4.23
      - run:
          name: "Provision submodules"
          command: yarn provision
      - save_cache:
          key: cache-{{ checksum "package.json" }}
          paths:
            - ~/.cache
      - run:
          name: "Verify Cypress before starting Tests"
          command: yarn cypress verify
      - run:
          name: "Run End-to-End Tests"
          command: yarn test:e2e:ci
      - store_test_results:
          path: reports
      - store_artifacts:
          path: reports
  build-styleguide:
    docker:
      - image: circleci/node:10.12
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: yarn install
      - run: yarn styleguide:build
      - persist_to_workspace:
          root: .
          paths:
            - styleguide
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "yarn.lock" }}
  deploy-styleguide:
    docker:
      - image: circleci/node:10.12
    working_directory: ~/repo
    steps:
      - add_ssh_keys:
          fingerprints:
            - "fd:cc:01:a2:10:09:76:43:06:1d:17:4d:44:4e:fb:24"
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: yarn install
      - attach_workspace:
          at: .
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "yarn.lock" }}
      - run: git config user.email "github@colony.io"
      - run: git config user.name "Colony Superuser"
      - run: yarn styleguide:deploy
  build-and-push-image:
    docker:
      - image: circleci/node:10.12
    working_directory: ~/colonyDapp
    steps:
      - checkout
      - restore_cache:
          keys:
          - node-modules-{{ checksum "package.json" }}
          - node-modules-
      - setup_remote_docker
      - run: yarn
      - run: yarn provision --skip-colony-network-build
      - run: docker build --build-arg hostname=qa.colony.io -t eu.gcr.io/${PROJECT_NAME}/dapp:$CIRCLE_SHA1 .
      - run: chmod +x ./docker/push_image.sh
      - run: bash ./docker/push_image.sh
      - run: chmod +x ./docker/gcrgc.sh
      - run: bash ./docker/gcrgc.sh eu.gcr.io/${PROJECT_NAME}/dapp `date -d "1 week ago" '+%Y-%m-%d'`
workflows:
  version: 2
  commit:
    jobs:
      - build-with-lockfile
      - integration-testing
      - e2e-testing
      - build-styleguide:
          requires:
            - build-with-lockfile
      - deploy-styleguide:
          requires:
            - build-styleguide
          filters:
            branches:
              only: master
      - build-and-push-image
  nightly:
    triggers:
      - schedule:
          cron: "0 2 * * *"
          filters:
            branches:
              only: master
    jobs:
      - nightly-build
      - integration-testing
      - e2e-testing
